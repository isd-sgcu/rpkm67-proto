syntax = "proto3";

package rpkm67.backend.group.v1;

option go_package = "rpkm67/backend/group/v1";

service GroupService {
  rpc FindOne(FindOneGroupRequest) returns (FindOneGroupResponse) {}
  rpc FindByToken(FindByTokenGroupRequest) returns (FindByTokenGroupResponse) {}
  rpc UpdateConfirm(UpdateConfirmGroupRequest) returns (UpdateConfirmGroupResponse) {}
  rpc Join(JoinGroupRequest) returns (JoinGroupResponse) {}
  rpc DeleteMember(DeleteMemberGroupRequest) returns (DeleteMemberGroupResponse){}
  rpc Leave(LeaveGroupRequest) returns (LeaveGroupResponse){}
}

message Group{
  string id = 1;
  string leaderID = 2;
  string token = 3;
  repeated UserInfo members = 4;
  bool isConfirmed = 5;
}

message UserInfo {
  string id = 1;
  string firstname = 2;
  string lastname = 3;
  string imageUrl = 4;
}

// FindOne
message FindOneGroupRequest{
  string id = 1;
}

message FindOneGroupResponse{
  Group group = 1;
}

// FindByToken
message FindByTokenGroupRequest{
  string token = 1;
}

message FindByTokenGroupResponse{
  string id = 1;
  string token = 2;
  UserInfo leader = 3;
}

// Update IsConfirmed
message UpdateConfirmGroupRequest{
  string userId = 1;
}

message UpdateConfirmGroupResponse{
  Group group = 1;
}

// Add new member to group
message JoinGroupRequest{
  string token = 1;
  string userId = 2;
}

message JoinGroupResponse{
  Group group = 1;
}

// Delete member from group
message DeleteMemberGroupRequest{
  string userId = 1;
  string leaderId = 2;
}

message DeleteMemberGroupResponse{
  Group group = 1;
}

// Leave group
message LeaveGroupRequest{
  string userId = 1;
}

message LeaveGroupResponse{
  Group group = 1;
}
